// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: init.proto

#ifndef PROTOBUF_INCLUDED_init_2eproto
#define PROTOBUF_INCLUDED_init_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_init_2eproto 

namespace protobuf_init_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
}  // namespace protobuf_init_2eproto
namespace dapi {
namespace init {
class ClientBroadcast;
class ClientBroadcastDefaultTypeInternal;
extern ClientBroadcastDefaultTypeInternal _ClientBroadcast_default_instance_;
class ServerResponse;
class ServerResponseDefaultTypeInternal;
extern ServerResponseDefaultTypeInternal _ServerResponse_default_instance_;
}  // namespace init
}  // namespace dapi
namespace google {
namespace protobuf {
template<> ::dapi::init::ClientBroadcast* Arena::CreateMaybeMessage<::dapi::init::ClientBroadcast>(Arena*);
template<> ::dapi::init::ServerResponse* Arena::CreateMaybeMessage<::dapi::init::ServerResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace dapi {
namespace init {

// ===================================================================

class ClientBroadcast : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:dapi.init.ClientBroadcast) */ {
 public:
  ClientBroadcast();
  virtual ~ClientBroadcast();

  ClientBroadcast(const ClientBroadcast& from);

  inline ClientBroadcast& operator=(const ClientBroadcast& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientBroadcast(ClientBroadcast&& from) noexcept
    : ClientBroadcast() {
    *this = ::std::move(from);
  }

  inline ClientBroadcast& operator=(ClientBroadcast&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ClientBroadcast& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClientBroadcast* internal_default_instance() {
    return reinterpret_cast<const ClientBroadcast*>(
               &_ClientBroadcast_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ClientBroadcast* other);
  friend void swap(ClientBroadcast& a, ClientBroadcast& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientBroadcast* New() const final {
    return CreateMaybeMessage<ClientBroadcast>(NULL);
  }

  ClientBroadcast* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ClientBroadcast>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const ClientBroadcast& from);
  void MergeFrom(const ClientBroadcast& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientBroadcast* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dapi.init.ClientBroadcast)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_init_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerResponse : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:dapi.init.ServerResponse) */ {
 public:
  ServerResponse();
  virtual ~ServerResponse();

  ServerResponse(const ServerResponse& from);

  inline ServerResponse& operator=(const ServerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerResponse(ServerResponse&& from) noexcept
    : ServerResponse() {
    *this = ::std::move(from);
  }

  inline ServerResponse& operator=(ServerResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ServerResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServerResponse* internal_default_instance() {
    return reinterpret_cast<const ServerResponse*>(
               &_ServerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ServerResponse* other);
  friend void swap(ServerResponse& a, ServerResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerResponse* New() const final {
    return CreateMaybeMessage<ServerResponse>(NULL);
  }

  ServerResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ServerResponse>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const ServerResponse& from);
  void MergeFrom(const ServerResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ServerResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 port = 1;
  void clear_port();
  static const int kPortFieldNumber = 1;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:dapi.init.ServerResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::uint32 port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_init_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ClientBroadcast

// -------------------------------------------------------------------

// ServerResponse

// uint32 port = 1;
inline void ServerResponse::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 ServerResponse::port() const {
  // @@protoc_insertion_point(field_get:dapi.init.ServerResponse.port)
  return port_;
}
inline void ServerResponse::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:dapi.init.ServerResponse.port)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace init
}  // namespace dapi

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_init_2eproto
