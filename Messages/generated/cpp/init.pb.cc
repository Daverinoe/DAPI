// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: init.proto

#include "init.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace dapi {
namespace init {
class ClientBroadcastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientBroadcast>
      _instance;
} _ClientBroadcast_default_instance_;
class ServerResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerResponse>
      _instance;
} _ServerResponse_default_instance_;
}  // namespace init
}  // namespace dapi
namespace protobuf_init_2eproto {
static void InitDefaultsClientBroadcast() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapi::init::_ClientBroadcast_default_instance_;
    new (ptr) ::dapi::init::ClientBroadcast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapi::init::ClientBroadcast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientBroadcast =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientBroadcast}, {}};

static void InitDefaultsServerResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapi::init::_ServerResponse_default_instance_;
    new (ptr) ::dapi::init::ServerResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapi::init::ServerResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ClientBroadcast.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerResponse.base);
}

}  // namespace protobuf_init_2eproto
namespace dapi {
namespace init {

// ===================================================================

void ClientBroadcast::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientBroadcast::ClientBroadcast()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_init_2eproto::scc_info_ClientBroadcast.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapi.init.ClientBroadcast)
}
ClientBroadcast::ClientBroadcast(const ClientBroadcast& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dapi.init.ClientBroadcast)
}

void ClientBroadcast::SharedCtor() {
}

ClientBroadcast::~ClientBroadcast() {
  // @@protoc_insertion_point(destructor:dapi.init.ClientBroadcast)
  SharedDtor();
}

void ClientBroadcast::SharedDtor() {
}

void ClientBroadcast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientBroadcast& ClientBroadcast::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_init_2eproto::scc_info_ClientBroadcast.base);
  return *internal_default_instance();
}


void ClientBroadcast::Clear() {
// @@protoc_insertion_point(message_clear_start:dapi.init.ClientBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ClientBroadcast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dapi.init.ClientBroadcast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(
        input, tag, &unknown_fields_stream));
  }
success:
  // @@protoc_insertion_point(parse_success:dapi.init.ClientBroadcast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapi.init.ClientBroadcast)
  return false;
#undef DO_
}

void ClientBroadcast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapi.init.ClientBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dapi.init.ClientBroadcast)
}

size_t ClientBroadcast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapi.init.ClientBroadcast)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientBroadcast::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ClientBroadcast*>(&from));
}

void ClientBroadcast::MergeFrom(const ClientBroadcast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapi.init.ClientBroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ClientBroadcast::CopyFrom(const ClientBroadcast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapi.init.ClientBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientBroadcast::IsInitialized() const {
  return true;
}

void ClientBroadcast::Swap(ClientBroadcast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientBroadcast::InternalSwap(ClientBroadcast* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ClientBroadcast::GetTypeName() const {
  return "dapi.init.ClientBroadcast";
}


// ===================================================================

void ServerResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerResponse::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerResponse::ServerResponse()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_init_2eproto::scc_info_ServerResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapi.init.ServerResponse)
}
ServerResponse::ServerResponse(const ServerResponse& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:dapi.init.ServerResponse)
}

void ServerResponse::SharedCtor() {
  port_ = 0u;
}

ServerResponse::~ServerResponse() {
  // @@protoc_insertion_point(destructor:dapi.init.ServerResponse)
  SharedDtor();
}

void ServerResponse::SharedDtor() {
}

void ServerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerResponse& ServerResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_init_2eproto::scc_info_ServerResponse.base);
  return *internal_default_instance();
}


void ServerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dapi.init.ServerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  port_ = 0u;
  _internal_metadata_.Clear();
}

bool ServerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dapi.init.ServerResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 port = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapi.init.ServerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapi.init.ServerResponse)
  return false;
#undef DO_
}

void ServerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapi.init.ServerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 port = 1;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->port(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dapi.init.ServerResponse)
}

size_t ServerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapi.init.ServerResponse)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 port = 1;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ServerResponse*>(&from));
}

void ServerResponse::MergeFrom(const ServerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapi.init.ServerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.port() != 0) {
    set_port(from.port());
  }
}

void ServerResponse::CopyFrom(const ServerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapi.init.ServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerResponse::IsInitialized() const {
  return true;
}

void ServerResponse::Swap(ServerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerResponse::InternalSwap(ServerResponse* other) {
  using std::swap;
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ServerResponse::GetTypeName() const {
  return "dapi.init.ServerResponse";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace init
}  // namespace dapi
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapi::init::ClientBroadcast* Arena::CreateMaybeMessage< ::dapi::init::ClientBroadcast >(Arena* arena) {
  return Arena::CreateInternal< ::dapi::init::ClientBroadcast >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapi::init::ServerResponse* Arena::CreateMaybeMessage< ::dapi::init::ServerResponse >(Arena* arena) {
  return Arena::CreateInternal< ::dapi::init::ServerResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
